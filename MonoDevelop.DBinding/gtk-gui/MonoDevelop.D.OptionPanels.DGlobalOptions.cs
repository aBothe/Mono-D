
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.D.OptionPanels
{
	public partial class DGlobalOptions
	{
		private global::Gtk.Notebook notebook1;
		
		private global::Gtk.Table table1;
		
		private global::Gtk.CheckButton check_EnableDiffbasedColoring;
		
		private global::Gtk.CheckButton check_EnableMixinAnalysis;
		
		private global::Gtk.CheckButton check_EnableSuggestionMode;
		
		private global::Gtk.CheckButton check_EnableUFCSCompletion;
		
		private global::Gtk.CheckButton check_HideDeprecatedItems;
		
		private global::Gtk.CheckButton check_HideDisabledItems;
		
		private global::Gtk.CheckButton check_ShowStructMembersInStructInitOnly;
		
		private global::Gtk.HBox hbox1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.Entry text_CompletionTimeout;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.VBox vbox1;
		
		private global::Gtk.CheckButton check_ShowFunctionParams;
		
		private global::Gtk.CheckButton check_ShowFunctionVariables;
		
		private global::Gtk.CheckButton check_ShowTypes;
		
		private global::Gtk.CheckButton check_GrayOutNonPublic;
		
		private global::Gtk.HBox hbox2;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.ComboBox combo_ExpansionBehaviour;
		
		private global::Gtk.Label label6;
		
		private global::Gtk.VBox vbox2;
		
		private global::Gtk.CheckButton check_IndentInsteadFormatCode;
		
		private global::Gtk.Label label7;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.D.OptionPanels.DGlobalOptions
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.D.OptionPanels.DGlobalOptions";
			// Container child MonoDevelop.D.OptionPanels.DGlobalOptions.Gtk.Container+ContainerChild
			this.notebook1 = new global::Gtk.Notebook ();
			this.notebook1.CanFocus = true;
			this.notebook1.Name = "notebook1";
			this.notebook1.CurrentPage = 0;
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.table1 = new global::Gtk.Table (((uint)(9)), ((uint)(1)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.check_EnableDiffbasedColoring = new global::Gtk.CheckButton ();
			global::Gtk.Tooltips w1 = new Gtk.Tooltips ();
			w1.SetTip (this.check_EnableDiffbasedColoring, "If enabled, deadlocks might occur if mixins are used too often", "If enabled, deadlocks might occur if mixins are used too often");
			this.check_EnableDiffbasedColoring.CanFocus = true;
			this.check_EnableDiffbasedColoring.Name = "check_EnableDiffbasedColoring";
			this.check_EnableDiffbasedColoring.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Enable diff-based syntax highlighting (shortcut: Ctrl+Alt+K)");
			this.check_EnableDiffbasedColoring.DrawIndicator = true;
			this.check_EnableDiffbasedColoring.UseUnderline = true;
			this.table1.Add (this.check_EnableDiffbasedColoring);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_EnableDiffbasedColoring]));
			w2.TopAttach = ((uint)(5));
			w2.BottomAttach = ((uint)(6));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_EnableMixinAnalysis = new global::Gtk.CheckButton ();
			w1.SetTip (this.check_EnableMixinAnalysis, "If enabled, deadlocks might occur if mixins are used too often", "If enabled, deadlocks might occur if mixins are used too often");
			this.check_EnableMixinAnalysis.CanFocus = true;
			this.check_EnableMixinAnalysis.Name = "check_EnableMixinAnalysis";
			this.check_EnableMixinAnalysis.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Enable Mixin & Template Mixin Analysis");
			this.check_EnableMixinAnalysis.DrawIndicator = true;
			this.check_EnableMixinAnalysis.UseUnderline = true;
			this.table1.Add (this.check_EnableMixinAnalysis);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_EnableMixinAnalysis]));
			w3.TopAttach = ((uint)(2));
			w3.BottomAttach = ((uint)(3));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_EnableSuggestionMode = new global::Gtk.CheckButton ();
			w1.SetTip (this.check_EnableSuggestionMode, "If true, the selected text in the completion box will not be inserted into the code unless the <Return> key has been pressed.", "If true, the selected text in the completion box will not be inserted into the code unless the <Return> key has been pressed.");
			this.check_EnableSuggestionMode.CanFocus = true;
			this.check_EnableSuggestionMode.Name = "check_EnableSuggestionMode";
			this.check_EnableSuggestionMode.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Enable suggestive completion mode");
			this.check_EnableSuggestionMode.DrawIndicator = true;
			this.check_EnableSuggestionMode.UseUnderline = true;
			this.table1.Add (this.check_EnableSuggestionMode);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_EnableSuggestionMode]));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_EnableUFCSCompletion = new global::Gtk.CheckButton ();
			this.check_EnableUFCSCompletion.CanFocus = true;
			this.check_EnableUFCSCompletion.Name = "check_EnableUFCSCompletion";
			this.check_EnableUFCSCompletion.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Enable UFCS Completion");
			this.check_EnableUFCSCompletion.DrawIndicator = true;
			this.check_EnableUFCSCompletion.UseUnderline = true;
			this.table1.Add (this.check_EnableUFCSCompletion);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_EnableUFCSCompletion]));
			w5.TopAttach = ((uint)(1));
			w5.BottomAttach = ((uint)(2));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_HideDeprecatedItems = new global::Gtk.CheckButton ();
			w1.SetTip (this.check_HideDeprecatedItems, "If enabled, deadlocks might occur if mixins are used too often", "If enabled, deadlocks might occur if mixins are used too often");
			this.check_HideDeprecatedItems.CanFocus = true;
			this.check_HideDeprecatedItems.Name = "check_HideDeprecatedItems";
			this.check_HideDeprecatedItems.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Hide deprecated items in the completion list");
			this.check_HideDeprecatedItems.Active = true;
			this.check_HideDeprecatedItems.DrawIndicator = true;
			this.check_HideDeprecatedItems.UseUnderline = true;
			this.table1.Add (this.check_HideDeprecatedItems);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_HideDeprecatedItems]));
			w6.TopAttach = ((uint)(3));
			w6.BottomAttach = ((uint)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_HideDisabledItems = new global::Gtk.CheckButton ();
			w1.SetTip (this.check_HideDisabledItems, "If enabled, deadlocks might occur if mixins are used too often", "If enabled, deadlocks might occur if mixins are used too often");
			this.check_HideDisabledItems.CanFocus = true;
			this.check_HideDisabledItems.Name = "check_HideDisabledItems";
			this.check_HideDisabledItems.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Hide disabled items in the completion list");
			this.check_HideDisabledItems.Active = true;
			this.check_HideDisabledItems.DrawIndicator = true;
			this.check_HideDisabledItems.UseUnderline = true;
			this.table1.Add (this.check_HideDisabledItems);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_HideDisabledItems]));
			w7.TopAttach = ((uint)(4));
			w7.BottomAttach = ((uint)(5));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.check_ShowStructMembersInStructInitOnly = new global::Gtk.CheckButton ();
			this.check_ShowStructMembersInStructInitOnly.CanFocus = true;
			this.check_ShowStructMembersInStructInitOnly.Name = "check_ShowStructMembersInStructInitOnly";
			this.check_ShowStructMembersInStructInitOnly.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Only show struct's items in struct initializer competion");
			this.check_ShowStructMembersInStructInitOnly.DrawIndicator = true;
			this.check_ShowStructMembersInStructInitOnly.UseUnderline = true;
			this.table1.Add (this.check_ShowStructMembersInStructInitOnly);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.check_ShowStructMembersInStructInitOnly]));
			w8.TopAttach = ((uint)(6));
			w8.BottomAttach = ((uint)(7));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::MonoDevelop.Core.GettextCatalog.GetString ("Completion timeout (Milliseconds; -1 = Infinite)");
			this.hbox1.Add (this.label2);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.label2]));
			w9.Position = 0;
			w9.Expand = false;
			w9.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.text_CompletionTimeout = new global::Gtk.Entry ();
			this.text_CompletionTimeout.CanFocus = true;
			this.text_CompletionTimeout.Name = "text_CompletionTimeout";
			this.text_CompletionTimeout.IsEditable = true;
			this.text_CompletionTimeout.InvisibleChar = '‚óè';
			this.hbox1.Add (this.text_CompletionTimeout);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.text_CompletionTimeout]));
			w10.Position = 1;
			w10.Expand = false;
			this.table1.Add (this.hbox1);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.hbox1]));
			w11.TopAttach = ((uint)(7));
			w11.BottomAttach = ((uint)(8));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			this.notebook1.Add (this.table1);
			// Notebook tab
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::MonoDevelop.Core.GettextCatalog.GetString ("Editing & Completion");
			this.notebook1.SetTabLabel (this.table1, this.label1);
			this.label1.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.check_ShowFunctionParams = new global::Gtk.CheckButton ();
			this.check_ShowFunctionParams.CanFocus = true;
			this.check_ShowFunctionParams.Name = "check_ShowFunctionParams";
			this.check_ShowFunctionParams.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Show function parameters");
			this.check_ShowFunctionParams.Active = true;
			this.check_ShowFunctionParams.DrawIndicator = true;
			this.check_ShowFunctionParams.UseUnderline = true;
			this.vbox1.Add (this.check_ShowFunctionParams);
			global::Gtk.Box.BoxChild w13 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.check_ShowFunctionParams]));
			w13.Position = 0;
			w13.Expand = false;
			w13.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.check_ShowFunctionVariables = new global::Gtk.CheckButton ();
			this.check_ShowFunctionVariables.CanFocus = true;
			this.check_ShowFunctionVariables.Name = "check_ShowFunctionVariables";
			this.check_ShowFunctionVariables.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Show function variables");
			this.check_ShowFunctionVariables.DrawIndicator = true;
			this.check_ShowFunctionVariables.UseUnderline = true;
			this.vbox1.Add (this.check_ShowFunctionVariables);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.check_ShowFunctionVariables]));
			w14.Position = 1;
			w14.Expand = false;
			w14.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.check_ShowTypes = new global::Gtk.CheckButton ();
			this.check_ShowTypes.CanFocus = true;
			this.check_ShowTypes.Name = "check_ShowTypes";
			this.check_ShowTypes.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Display node base types");
			this.check_ShowTypes.Active = true;
			this.check_ShowTypes.DrawIndicator = true;
			this.check_ShowTypes.UseUnderline = true;
			this.vbox1.Add (this.check_ShowTypes);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.check_ShowTypes]));
			w15.Position = 2;
			w15.Expand = false;
			w15.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.check_GrayOutNonPublic = new global::Gtk.CheckButton ();
			this.check_GrayOutNonPublic.CanFocus = true;
			this.check_GrayOutNonPublic.Name = "check_GrayOutNonPublic";
			this.check_GrayOutNonPublic.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Gray-out non public members");
			this.check_GrayOutNonPublic.Active = true;
			this.check_GrayOutNonPublic.DrawIndicator = true;
			this.check_GrayOutNonPublic.UseUnderline = true;
			this.vbox1.Add (this.check_GrayOutNonPublic);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.check_GrayOutNonPublic]));
			w16.Position = 3;
			w16.Expand = false;
			w16.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.LabelProp = global::MonoDevelop.Core.GettextCatalog.GetString ("Expansion behaviour on tree rebuild");
			this.hbox2.Add (this.label5);
			global::Gtk.Box.BoxChild w17 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.label5]));
			w17.Position = 0;
			w17.Expand = false;
			w17.Fill = false;
			// Container child hbox2.Gtk.Box+BoxChild
			this.combo_ExpansionBehaviour = global::Gtk.ComboBox.NewText ();
			this.combo_ExpansionBehaviour.AppendText (global::MonoDevelop.Core.GettextCatalog.GetString ("Collapse All"));
			this.combo_ExpansionBehaviour.AppendText (global::MonoDevelop.Core.GettextCatalog.GetString ("Leave expanded nodes expanded"));
			this.combo_ExpansionBehaviour.AppendText (global::MonoDevelop.Core.GettextCatalog.GetString ("Expand All"));
			this.combo_ExpansionBehaviour.Name = "combo_ExpansionBehaviour";
			this.combo_ExpansionBehaviour.Active = 0;
			this.hbox2.Add (this.combo_ExpansionBehaviour);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.combo_ExpansionBehaviour]));
			w18.Position = 1;
			this.vbox1.Add (this.hbox2);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox2]));
			w19.Position = 4;
			w19.Expand = false;
			w19.Fill = false;
			this.notebook1.Add (this.vbox1);
			global::Gtk.Notebook.NotebookChild w20 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox1]));
			w20.Position = 1;
			// Notebook tab
			this.label6 = new global::Gtk.Label ();
			this.label6.Name = "label6";
			this.label6.LabelProp = global::MonoDevelop.Core.GettextCatalog.GetString ("Document Outline");
			this.notebook1.SetTabLabel (this.vbox1, this.label6);
			this.label6.ShowAll ();
			// Container child notebook1.Gtk.Notebook+NotebookChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.check_IndentInsteadFormatCode = new global::Gtk.CheckButton ();
			this.check_IndentInsteadFormatCode.CanFocus = true;
			this.check_IndentInsteadFormatCode.Name = "check_IndentInsteadFormatCode";
			this.check_IndentInsteadFormatCode.Label = global::MonoDevelop.Core.GettextCatalog.GetString ("Only indent code lines instead of rearrange code parts\n(because the actual formatter isn't finished currently)");
			this.check_IndentInsteadFormatCode.Active = true;
			this.check_IndentInsteadFormatCode.DrawIndicator = true;
			this.check_IndentInsteadFormatCode.UseUnderline = true;
			this.vbox2.Add (this.check_IndentInsteadFormatCode);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.check_IndentInsteadFormatCode]));
			w21.Position = 0;
			w21.Expand = false;
			w21.Fill = false;
			this.notebook1.Add (this.vbox2);
			global::Gtk.Notebook.NotebookChild w22 = ((global::Gtk.Notebook.NotebookChild)(this.notebook1 [this.vbox2]));
			w22.Position = 2;
			// Notebook tab
			this.label7 = new global::Gtk.Label ();
			this.label7.Name = "label7";
			this.label7.LabelProp = global::MonoDevelop.Core.GettextCatalog.GetString ("Formatting");
			this.notebook1.SetTabLabel (this.vbox2, this.label7);
			this.label7.ShowAll ();
			this.Add (this.notebook1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
		}
	}
}
