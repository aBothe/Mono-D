
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.D.Profiler.Gui
{
	public partial class ProfilerPadWidget
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action refreshAction;
		private global::Gtk.Action switchProfilingModeAction;
		private global::Gtk.Action openTraceLogAction;
		private global::Gtk.Action copyRowAction;
		private global::Gtk.Action goToFunctionAction;
		private global::Gtk.VBox vbox2;
		private global::Gtk.Toolbar toolbar2;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.NodeView nodeView;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.D.Profiler.Gui.ProfilerPadWidget
			Stetic.BinContainer w1 = global::Stetic.BinContainer.Attach (this);
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w2 = new global::Gtk.ActionGroup ("Default");
			this.refreshAction = new global::Gtk.Action ("refreshAction", global::Mono.Unix.Catalog.GetString ("Scann"), global::Mono.Unix.Catalog.GetString ("Analysing the trace.log of the selected project"), "gtk-refresh");
			this.refreshAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Scann");
			w2.Add (this.refreshAction, null);
			this.switchProfilingModeAction = new global::Gtk.Action ("switchProfilingModeAction", global::Mono.Unix.Catalog.GetString ("Switch Profiling Mode"), global::Mono.Unix.Catalog.GetString ("Enable / Disable Profiling Mode"), "gtk-yes");
			this.switchProfilingModeAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Switch Profiling Mode");
			w2.Add (this.switchProfilingModeAction, null);
			this.openTraceLogAction = new global::Gtk.Action ("openTraceLogAction", null, global::Mono.Unix.Catalog.GetString ("Open the trace.log file of the selected project"), "gtk-open");
			w2.Add (this.openTraceLogAction, null);
			this.copyRowAction = new global::Gtk.Action ("copyRowAction", null, global::Mono.Unix.Catalog.GetString ("Copy the selected row to the clipboard"), "gtk-copy");
			w2.Add (this.copyRowAction, null);
			this.goToFunctionAction = new global::Gtk.Action ("goToFunctionAction", null, global::Mono.Unix.Catalog.GetString ("Go to the selected function"), "gtk-jump-to");
			w2.Add (this.goToFunctionAction, null);
			this.UIManager.InsertActionGroup (w2, 0);
			this.Name = "MonoDevelop.D.Profiler.Gui.ProfilerPadWidget";
			// Container child MonoDevelop.D.Profiler.Gui.ProfilerPadWidget.Gtk.Container+ContainerChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><toolbar name='toolbar2'><toolitem name='switchProfilingModeAction' action='switchProfilingModeAction'/><toolitem name='refreshAction' action='refreshAction'/><toolitem name='openTraceLogAction' action='openTraceLogAction'/><toolitem name='copyRowAction' action='copyRowAction'/><toolitem name='goToFunctionAction' action='goToFunctionAction'/></toolbar></ui>");
			this.toolbar2 = ((global::Gtk.Toolbar)(this.UIManager.GetWidget ("/toolbar2")));
			this.toolbar2.Name = "toolbar2";
			this.toolbar2.ShowArrow = false;
			this.toolbar2.ToolbarStyle = ((global::Gtk.ToolbarStyle)(0));
			this.toolbar2.IconSize = ((global::Gtk.IconSize)(2));
			this.vbox2.Add (this.toolbar2);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.toolbar2]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.nodeView = new global::Gtk.NodeView ();
			this.nodeView.CanFocus = true;
			this.nodeView.Name = "nodeView";
			this.nodeView.Reorderable = true;
			this.GtkScrolledWindow.Add (this.nodeView);
			this.vbox2.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.GtkScrolledWindow]));
			w5.Position = 1;
			this.Add (this.vbox2);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			w1.SetUiManager (UIManager);
			this.Hide ();
			this.refreshAction.Activated += new global::System.EventHandler (this.OnRefreshActionActivated);
			this.switchProfilingModeAction.Activated += new global::System.EventHandler (this.OnSwitchProfilingModeActionActivated);
			this.openTraceLogAction.Activated += new global::System.EventHandler (this.OnOpenTraceLogActionActivated);
			this.copyRowAction.Activated += new global::System.EventHandler (this.OnCopyRowActionActivated);
			this.goToFunctionAction.Activated += new global::System.EventHandler (this.OnGoToFunctionActionActivated);
			this.nodeView.RowActivated += new global::Gtk.RowActivatedHandler (this.OnNodeViewRowActivated);
		}
	}
}
